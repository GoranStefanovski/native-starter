version: "3"

services:
  webserver:
    build:
      context: ./bin/${PHPVERSION}
    container_name: '${COMPOSE_PROJECT_NAME}-${PHPVERSION}'
    restart: 'always'
    ports:
      - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
      - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
    networks:
      main:
        aliases:
          - starter.test
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www/html/starter
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${APACHE_LOG_DIR-./logs/apache2}:/var/log/apache2
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  node:
    build:
      context: ./bin/node
    container_name: '${COMPOSE_PROJECT_NAME}-node'
    restart: 'always'
    # command: bash -c "yarn && yarn watch"
    tty: true
    ports:
      - "3030:3030"
      - "24678:24678"
    links:
      - "webserver:starter.test"
    networks:
      - main
    volumes:
      - ${NODE_ROOT-./www}:/usr/app
    working_dir: /usr/app
    environment:
      HOST: 0.0.0.0
  database:
    build:
      context: "./bin/${DATABASE}"
    container_name: '${COMPOSE_PROJECT_NAME}-database'
    restart: 'always'
    ports:
      - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    networks:
      - main
    volumes:
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
      - ${MYSQL_CONF-./config/database/my.cnf}:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: 3306
#  mongo:
#    build:
#      context: ./bin/mongo
#    container_name: '${COMPOSE_PROJECT_NAME}-mongo'
#    environment:
#      MONGO_INITDB_DATABASE: admin
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_ROOT_USER}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_ROOT_PASSWORD}
#    restart: unless-stopped
#    ports:
#      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}"
#    networks:
#      - main
#    volumes:
#      - ${MONGO_DATA_DIR}/data/db:/data/db
#      - ${MONGO_DATA_DIR}/Databases/dev.archive:/Databases/dev.archive
#      - ${MONGO_DATA_DIR}/Databases/production:/Databases/production
#      - ${MONGO_LOG_DIR}/var/log/mongodb:/var/log/mongodb
#      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#    command: [--auth]
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: '${COMPOSE_PROJECT_NAME}-phpmyadmin'
    restart: always
    ports:
      - '${HOST_MACHINE_PMA_PORT}:80'
    networks:
      - main
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: tiger

    # links:
    #   - database
    # environment:
    #   PMA_HOST: database
    #   PMA_PORT: 3306
    #   PMA_USER: root
    #   PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #   MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #   MYSQL_USER: ${MYSQL_USER}
    #   MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    # ports:
    #   - '${HOST_MACHINE_PMA_PORT}:80'
    # volumes:
    #   - /sessions
    #   - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
  redis:
    container_name: '${COMPOSE_PROJECT_NAME}-redis'
    image: redis:latest
    expose:
      - "6379"
    ports:
      - "${HOST_MACHINE_REDIS_PORT}:6379"
    networks:
      - main
      # ports:
      # - "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
networks:
  main:
